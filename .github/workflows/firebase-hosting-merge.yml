# This file was auto-generated by the Firebase CLI and modified for secure environment management
# https://github.com/firebase/firebase-tools
#
# Required GitHub Secrets (set in repository Settings > Secrets and variables > Actions):
# - FIREBASE_API_KEY: Your Firebase API key
# - FIREBASE_AUTH_DOMAIN: Your Firebase auth domain
# - FIREBASE_PROJECT_ID: Your Firebase project ID
# - FIREBASE_STORAGE_BUCKET: Your Firebase storage bucket
# - FIREBASE_MESSAGING_SENDER_ID: Your Firebase messaging sender ID
# - FIREBASE_APP_ID: Your Firebase app ID
# - FIREBASE_MEASUREMENT_ID: Your Firebase measurement ID
# - FIREBASE_SERVICE_ACCOUNT_UVBUNNY_APP: Firebase service account key (JSON)

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Validate required secrets
        run: |
          echo "🔍 Validating required GitHub Secrets..."
          MISSING_SECRETS=()

          if [ -z "${{ secrets.FIREBASE_API_KEY }}" ]; then
            MISSING_SECRETS+=("FIREBASE_API_KEY")
          fi
          if [ -z "${{ secrets.FIREBASE_AUTH_DOMAIN }}" ]; then
            MISSING_SECRETS+=("FIREBASE_AUTH_DOMAIN")
          fi
          if [ -z "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
            MISSING_SECRETS+=("FIREBASE_PROJECT_ID")
          fi
          if [ -z "${{ secrets.FIREBASE_STORAGE_BUCKET }}" ]; then
            MISSING_SECRETS+=("FIREBASE_STORAGE_BUCKET")
          fi
          if [ -z "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" ]; then
            MISSING_SECRETS+=("FIREBASE_MESSAGING_SENDER_ID")
          fi
          if [ -z "${{ secrets.FIREBASE_APP_ID }}" ]; then
            MISSING_SECRETS+=("FIREBASE_APP_ID")
          fi
          if [ -z "${{ secrets.FIREBASE_MEASUREMENT_ID }}" ]; then
            MISSING_SECRETS+=("FIREBASE_MEASUREMENT_ID")
          fi
          if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_UVBUNNY_APP }}" ]; then
            MISSING_SECRETS+=("FIREBASE_SERVICE_ACCOUNT_UVBUNNY_APP")
          fi

          if [ ${#MISSING_SECRETS[@]} -ne 0 ]; then
            echo "❌ Missing required GitHub Secrets:"
            printf '%s\n' "${MISSING_SECRETS[@]}"
            echo ""
            echo "Please add these secrets in repository Settings > Secrets and variables > Actions"
            echo "See .github/secrets-setup.md for detailed instructions"
            exit 1
          fi

          echo "✅ All required secrets are configured"

      - name: Install dependencies
        run: npm ci

      - name: Create environment files from secrets
        run: |
          echo "🔧 Creating environment files from GitHub Secrets..."

          # Create production environment file
          cat > src/environments/environment.prod.ts << EOF
          // Generated automatically from GitHub Secrets during CI/CD
          // DO NOT EDIT - This file is created during the build process

          const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          };

          export const environment = {
            production: true,
            firebase: {
              apiKey: firebaseConfig.apiKey,
              authDomain: firebaseConfig.authDomain,
              projectId: firebaseConfig.projectId,
              storageBucket: firebaseConfig.storageBucket,
              messagingSenderId: firebaseConfig.messagingSenderId,
              appId: firebaseConfig.appId,
              measurementId: firebaseConfig.measurementId,
            }
          };
          EOF

          # Create development environment file (same config for build)
          cat > src/environments/environment.ts << EOF
          // Generated automatically from GitHub Secrets during CI/CD
          // DO NOT EDIT - This file is created during the build process

          const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          };

          export const environment = {
            production: false,
            firebase: {
              apiKey: firebaseConfig.apiKey,
              authDomain: firebaseConfig.authDomain,
              projectId: firebaseConfig.projectId,
              storageBucket: firebaseConfig.storageBucket,
              messagingSenderId: firebaseConfig.messagingSenderId,
              appId: firebaseConfig.appId,
              measurementId: firebaseConfig.measurementId,
            }
          };
          EOF

          echo "✅ Environment files created successfully"

      - name: Verify environment files
        run: |
          echo "🔍 Verifying generated environment files..."

          if [ ! -f "src/environments/environment.ts" ]; then
            echo "❌ environment.ts was not created"
            exit 1
          fi

          if [ ! -f "src/environments/environment.prod.ts" ]; then
            echo "❌ environment.prod.ts was not created"
            exit 1
          fi

          # Check if files contain the expected structure (without revealing secrets)
          if grep -q "export const environment" src/environments/environment.ts && \
             grep -q "production: false" src/environments/environment.ts; then
            echo "✅ environment.ts has correct structure"
          else
            echo "❌ environment.ts has incorrect structure"
            exit 1
          fi

          if grep -q "export const environment" src/environments/environment.prod.ts && \
             grep -q "production: true" src/environments/environment.prod.ts; then
            echo "✅ environment.prod.ts has correct structure"
          else
            echo "❌ environment.prod.ts has incorrect structure"
            exit 1
          fi

      - name: Build application
        run: |
          echo "🏗️ Building application for production..."
          npm run build

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_UVBUNNY_APP }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Cleanup environment files
        if: always()
        run: |
          echo "🧹 Cleaning up generated environment files..."
          rm -f src/environments/environment.ts
          rm -f src/environments/environment.prod.ts
          echo "✅ Cleanup completed"
